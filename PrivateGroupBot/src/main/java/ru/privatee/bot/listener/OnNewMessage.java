package ru.privatee.bot.listener;

import java.util.HashMap;
import java.util.List;

import javax.print.attribute.standard.MediaSize.Other;

import com.pengrad.telegrambot.model.Update;
import com.pengrad.telegrambot.response.BaseResponse;

import ru.privatee.bot.Config;
import ru.privatee.bot.object.Channel;
import ru.privatee.bot.object.User;
import ru.privatee.bot.tgbot.Bot;
import ru.privatee.bot.tgbot.events.MessageEvnet.onNewChatMessageListener;
import ru.privatee.bot.utils.AcceptType;
import ru.privatee.bot.utils.TGUtils;
import ru.privatee.bot.utils.UserUtils;

public class OnNewMessage implements onNewChatMessageListener {

	@Override
	public void onCommandEvent(Update up) {
		register(up);
		String[] args = up.message().text().split(" ");
		User us = UserUtils.getUsers().get(up.message().from().id());
		long chatId = up.message().chat().id();
		switch (args[0].toLowerCase()) {
		case "/start":{
			startMessage(up);
			break;
		}
		case "/admin":{
			if(!us.isAdmin()) {
			//	return;
			}
			Bot.sendMessageButton(chatId, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ", TGUtils.getKeyboardMarkup("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;users:–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π;msgAll"));
			return;
		}
		case "‚åõÔ∏è":{
			System.out.println(us.getAcceptType());
			if(us.getAcceptType()!=AcceptType.Null){
				Bot.sendMessageButton(chatId, "‚åõÔ∏è –î–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ '"+us.getAcceptType().toString()+"':", TGUtils.getUrlButton("VIP", us.getUrl()));
			return;
			}
			
			Bot.sendMessageButton(chatId, "‚åõÔ∏è –£ –í–∞—Å –Ω–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.\r\n"
					+ "\r\n"
					+ "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∫–∞–Ω–∞–ª–∞–º–∏, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.", TGUtils.getKeyboardMarkup("–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø;buy"));
		return;
		}
		case "üíµ":{
			Bot.sendMessageButton(chatId, "‚ÑπÔ∏è –ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–∞–Ω–∞–ª–æ–º, –≤—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É", TGUtils.getKeyboardMarkup("‚ôªÔ∏èVIP –¥–æ—Å—Ç—É–ø - –Ω–∞ 1 –º–µ—Å—è—Ü;vip_1moth:‚ôæ VIP –¥–æ—Å—Ç—É–ø - –Ω–∞–≤—Å–µ–≥–¥–∞;vip_all"));
		}
		case "dev":{
			Bot.sendMessage(chatId, "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞ @dnk10");
			return;
			}
		default:{
			if(us.getMsgB()) {
				HashMap<Long, User> users = UserUtils.getUsers();
				for(User other:users.values()) {
					Bot.sendAllMsg(other.getChatId(), up.message());
				}
				Bot.sendMessage(chatId, "–†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!");
				return;
			}
			
			return;
		}
		
		}

	}

	private void startMessage(Update up) {
		 String[][] s = {{"üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø", "‚åõÔ∏è –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"}};
		Bot.sendReplyKeyboard(up.message().chat().id(), "üì∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", TGUtils.getKeyBoard(s));
	}

	private User register(Update up) {
		HashMap<Long, User> users = UserUtils.getUsers();
		User us = null;
		 String[][] s = {{"üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø", "‚åõÔ∏è –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"}};
		if(!users.containsKey(up.message().from().id())) {
			String name = up.message().from().username();
			if(name.equals("null")) {
				name = up.message().from().firstName();
			}
		 us = new User(up.message().from().id(), name);
		 if(users.size() == 0) {
			 us.setAdmin(true);
		 }
		 users.put(us.getChatId(), us);
		 UserUtils.saveUser(users);
		 Bot.sendReplyKeyboard(up.message().chat().id(), "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –¥—Ä—É–∑—å—è! "
		 		+ ""
		 		+ "–≠—Ç–æ –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–∫—É–ø–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –≤ VIP –∫–∞–Ω–∞–ª–∞ –°–ª–∏–≤–æ—á–Ω–∞—è üíß "
		 		+ ""
		 		+ "–ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –í–∞–º —Ç–∞—Ä–∏—Ñ –Ω–∏–∂–µüëá", TGUtils.getKeyBoard(s));
		 return us;
		}
		us = users.get(up.message().from().id());
		return us;
	}

}
